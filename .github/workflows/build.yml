name: App Build

on:
  workflow_dispatch:
  push:
    branches:
      - ci

env:
  APP_VERSION: "v0.${{ github.run_number }}"
  VITE_CLIENT_VERSION: "v0.${{ github.run_number }}"

jobs:
  create_release:
    name: Create Release
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.APP_VERSION }}
          tag_name: ${{ env.APP_VERSION }}
          draft: false
          prerelease: false

  build:
    needs: create_release
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: build-linux
            os: ubuntu-22.04
            platform: linux/amd64
          - name: build-windows
            os: ubuntu-22.04
            platform: windows/amd64
          - name: build-mac
            os: macos-latest
            platform: darwin/amd64
    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Covers both libgtk for Linux build and nsis for Windows installer build
      - name: Install System Dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y zip nsis libgtk-3-0 libwebkit2gtk-4.0-dev gcc-aarch64-linux-gnu

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Build App
        run: wails build -skipbindings -platform=${{ matrix.build.platform }} -nsis=${{ matrix.build.platform == 'windows/amd64' }} -ldflags "-X main.version=${{env.APP_VERSION}}"

      - name: Compress Linux Binary
        if: matrix.build.platform == 'linux/amd64'
        run: cd build/bin && tar -cJf cybermuse-desktop-linux-x64.tar.xz cybermuse-desktop

      - name: Compress Windows Binary/Installer
        if: matrix.build.platform == 'windows/amd64'
        run: |
          cd build/bin
          zip -r cybermuse-desktop-windows-x64.zip cybermuse-desktop.exe
          zip -r cybermuse-desktop-windows-installer.zip cybermuse-desktop-amd64-installer.exe

      - name: Compress Mac Binary
        if: matrix.build.platform == 'darwin/amd64'
        run: cd build/bin && zip -r cybermuse-desktop-mac-x64.zip cybermuse-desktop.app

      # Github release files
      - name: Upload Github Release Files
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.APP_VERSION }}
          files: |
            build/bin/*.tar.xz
            build/bin/*.zip

      # - name: Setup RClone
      #   uses: AnimMouse/setup-rclone@v1
      #   with:
      #     disable_base64: true
      #     rclone_config: |
      #       [r2]
      #       type = s3
      #       provider = Cloudflare
      #       access_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}
      #       secret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}
      #       endpoint = https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com
      #       acl = private
      #       no_check_bucket = true

      # - name: Upload Linux
      #   if: matrix.build.platform == 'linux/amd64'
      #   working-directory: out
      #   run: |
      #     rclone copy cybermuse-desktop-linux-x64.tar.xz r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-linux-x64.tar.xz r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-linux.tar.xz
        
      # - name: Upload Mac
      #   if: matrix.build.platform == 'darwin/amd64'
      #   working-directory: out
      #   run: |
      #     rclone copy cybermuse-desktop-mac-x64.zip r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-mac-x64.zip r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-mac-x64.zip
      #     rclone copy cybermuse-desktop-mac-arm64.zip r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-mac-arm64.zip r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-mac-arm64.zip

      # - name: Archive and Upload Windows
      #   if: matrix.build.platform == 'windows/amd64'
      #   working-directory: out
      #   run: |
      #     Compress-Archive -Path cybermuse-desktop-win-x64.exe -DestinationPath cybermuse-desktop-win-x64.zip
      #     rclone copy cybermuse-desktop-win-x64.zip r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-win-x64.zip r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-win-x64.zip