name: App Build

on:
    workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [
          # ubuntu-latest,
          windows-latest,
          # macos-latest
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci

      - name: Build Frontend
        run: npm run build:frontend
      
      - name: Build Backend
        run: npm run build:backend

      - name: Build Electron app with electron-builder
        run: npm run make

      # - uses: ryand56/r2-upload-action@latest
      #   with:
      #     r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
      #     r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
      #     r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      #     r2-bucket: chat-app-releases
      #     source-dir: ./out/*.zip
      #     destination-dir: ''

      # - name: Store Linux artifacts
      #   if: runner.os == 'Linux'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-${{ runner.os }}-x64
      #     path: out/linux-unpacked

      # - name: Store Mac x64 Artifact
      #   if: runner.os == 'macOS'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-${{ runner.os }}-x64
      #     path: out/mac
        
      # - name: Store arm64 Artifact
      #   if: runner.os == 'macOS'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-${{ runner.os }}-arm64
      #     path: out/mac-arm64

      - name: Store Windows artifacts
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ runner.os }}-x64
          path: out/win-unpacked
