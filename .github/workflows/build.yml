name: App Build

on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:
  build:
    permissions: write-all
    env:
      APP_VERSION: ${{ github.ref_name }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: build-linux
            os: ubuntu-22.04
            platform: linux
          - name: build-windows
            os: ubuntu-22.04
            platform: windows
          - name: build-mac
            os: macos-latest
            platform: darwin
    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install system dependencies for Electron builds
      - name: Install System Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y zip nsis
          # Install Wine for Windows cross-compilation
          if [ "${{ matrix.build.platform }}" = "windows" ]; then
            sudo apt-get install -y wine64 wine32
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Build Electron App
        run: bun run make
        env:
          BUILD_PLATFORM: ${{ matrix.build.platform }}

      - name: Upload Github Release Files
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            build/bin/*.tar.xz
            build/bin/*.zip
          draft: false
          prerelease: false

      # - name: Setup RClone
      #   uses: AnimMouse/setup-rclone@v1
      #   with:
      #     disable_base64: true
      #     rclone_config: |
      #       [r2]
      #       type = s3
      #       provider = Cloudflare
      #       access_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}
      #       secret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}
      #       endpoint = https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com
      #       acl = private
      #       no_check_bucket = true

      # - name: Upload Linux
      #   if: matrix.build.platform == 'linux/amd64'
      #   working-directory: out
      #   run: |
      #     rclone copy cybermuse-desktop-linux-x64.tar.xz r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-linux-x64.tar.xz r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-linux.tar.xz
        
      # - name: Upload Mac
      #   if: matrix.build.platform == 'darwin/amd64'
      #   working-directory: out
      #   run: |
      #     rclone copy cybermuse-desktop-mac-x64.zip r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-mac-x64.zip r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-mac-x64.zip
      #     rclone copy cybermuse-desktop-mac-arm64.zip r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-mac-arm64.zip r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-mac-arm64.zip

      # - name: Archive and Upload Windows
      #   if: matrix.build.platform == 'windows/amd64'
      #   working-directory: out
      #   run: |
      #     Compress-Archive -Path cybermuse-desktop-win-x64.exe -DestinationPath cybermuse-desktop-win-x64.zip
      #     rclone copy cybermuse-desktop-win-x64.zip r2:chat-app-releases/latest/
      #     rclone copyto cybermuse-desktop-win-x64.zip r2:chat-app-releases/versions/cybermuse-desktop-${{env.APP_VERSION}}-win-x64.zip