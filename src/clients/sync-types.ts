/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/list': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['getList']
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/upload': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put: operations['putUpload']
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/download/{key}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get: operations['getDownloadByKey']
        put?: never
        post?: never
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/download': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post: operations['postDownload']
        delete?: never
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
    '/{key}': {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        get?: never
        put?: never
        post?: never
        delete: operations['deleteByKey']
        options?: never
        head?: never
        patch?: never
        trace?: never
    }
}
export type webhooks = Record<string, never>
export interface components {
    schemas: never
    responses: never
    parameters: never
    requestBodies: never
    headers: never
    pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
    getList: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': {
                        documents: {
                            key: string
                            lastUpdate: number
                            version: number
                        }[]
                        deletions: {
                            key: string
                            deletedAt: number
                        }[]
                    }
                    'multipart/form-data': {
                        documents: {
                            key: string
                            lastUpdate: number
                            version: number
                        }[]
                        deletions: {
                            key: string
                            deletedAt: number
                        }[]
                    }
                    'text/plain': {
                        documents: {
                            key: string
                            lastUpdate: number
                            version: number
                        }[]
                        deletions: {
                            key: string
                            deletedAt: number
                        }[]
                    }
                }
            }
        }
    }
    putUpload: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': {
                    key: string
                    doc: {
                        id: string
                        lastUpdate: number
                        version: number
                    } & Record<string, never>
                }
                'multipart/form-data': {
                    key: string
                    doc: {
                        id: string
                        lastUpdate: number
                        version: number
                    } & Record<string, never>
                }
                'text/plain': {
                    key: string
                    doc: {
                        id: string
                        lastUpdate: number
                        version: number
                    } & Record<string, never>
                }
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
    getDownloadByKey: {
        parameters: {
            query?: never
            header?: never
            path: {
                key: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': {
                        lastUpdate: number
                        version: number
                    }
                    'multipart/form-data': {
                        lastUpdate: number
                        version: number
                    }
                    'text/plain': {
                        lastUpdate: number
                        version: number
                    }
                }
            }
            404: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': string
                    'multipart/form-data': string
                    'text/plain': string
                }
            }
        }
    }
    postDownload: {
        parameters: {
            query?: never
            header?: never
            path?: never
            cookie?: never
        }
        requestBody: {
            content: {
                'application/json': {
                    keys: string[]
                }
                'multipart/form-data': {
                    keys: string[]
                }
                'text/plain': {
                    keys: string[]
                }
            }
        }
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': {
                        key: string
                        document: {
                            lastUpdate: number
                            version: number
                        } & {
                            [key: string]: unknown
                        }
                    }[]
                    'multipart/form-data': {
                        key: string
                        document: {
                            lastUpdate: number
                            version: number
                        } & {
                            [key: string]: unknown
                        }
                    }[]
                    'text/plain': {
                        key: string
                        document: {
                            lastUpdate: number
                            version: number
                        } & {
                            [key: string]: unknown
                        }
                    }[]
                }
            }
            404: {
                headers: {
                    [name: string]: unknown
                }
                content: {
                    'application/json': string
                    'multipart/form-data': string
                    'text/plain': string
                }
            }
        }
    }
    deleteByKey: {
        parameters: {
            query?: never
            header?: never
            path: {
                key: string
            }
            cookie?: never
        }
        requestBody?: never
        responses: {
            200: {
                headers: {
                    [name: string]: unknown
                }
                content?: never
            }
        }
    }
}
