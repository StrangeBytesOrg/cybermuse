/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/status": {
    /** Get status info about the server */
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              modelLoaded: boolean;
              currentModel?: string;
              modelDir?: string;
              autoLoad: boolean;
            };
          };
        };
      };
    };
  };
  "/api/models": {
    /** Get all models */
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                name: string;
              }[];
          };
        };
      };
    };
  };
  "/api/load-model": {
    /** Load a model */
    post: {
      requestBody: {
        content: {
          "application/json": {
            modelName: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              success: boolean;
            };
          };
        };
      };
    };
  };
  "/api/download-model": {
    /** Download a model */
    post: {
      requestBody: {
        content: {
          "application/json": {
            repoId: string;
            path: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              success: boolean;
            };
          };
        };
      };
    };
  };
  "/api/set-model-dir": {
    /** Set the model folder */
    post: {
      requestBody: {
        content: {
          "application/json": {
            dir: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              success: boolean;
            };
          };
        };
      };
    };
  };
  "/api/set-auto-load": {
    /** Set auto load */
    post: {
      requestBody: {
        content: {
          "application/json": {
            autoLoad: boolean;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              success: boolean;
            };
          };
        };
      };
    };
  };
  "/api/generate-stream": {
    /**
     * Generate a completion stream
     * @description Generates text and returns it using Server-Sent Events (SSE) to stream the response.
     * ```
     * event: message | final
     * data: {text}
     * ```
     *
     * The `message` event is sent for each token generated and the `final` event is sent at the end with the full response.
     *
     * This is a non standard SSE implementation in order to support sending a body and using POST requests so it will not work with the browser EventSource API.
     */
    post: {
      requestBody: {
        content: {
          "application/json": {
            prompt: string;
            maxTokens?: number;
            temperature?: number;
            minP?: number;
            topP?: number;
            topK?: number;
          };
        };
      };
      responses: {
        /** @description data: {text} */
        200: {
          content: {
            "text/event-stream": string;
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
